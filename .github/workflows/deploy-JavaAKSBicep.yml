# This workflow performs the following:
# - Database configuration
# - Provisioning Azure Services  
# - Create the spring-petclinic-AKS App on Docker
# - Create an Azure Container Registry 
# - Push your app to the container registry
# - Create a Kubernetes Cluster on AKS 
# - Deploy the image to your Kubernetes cluster
# - Verify your container image
#
# Secrets required to be in place:
# - AZURE_CREDENTIALS -

name: Build and Deploy Application
env:
  DEPLOYMENT_NAME: "petclinicaks"
  DEPLOYMENT_REGION: "eastus"
  LOCATION: "eastus"
  ACR_NAME: "petclinicaksacr23"
  CLUSTER_NAME: "aks-cluster"
  RESOURCE_GROUP: "petclinicaks-rg"

on:
  # Triggers the workflow on push events on the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - '*.png'

  # We also want to be able to run this manually from Github
  workflow_dispatch:
jobs:
  hub_networking_AKS_Cluster:  # deploy Hub Networking Infra
     runs-on: ubuntu-latest
     steps:
     - name: 'Checkout GitHub Action'
       uses: actions/checkout@main
     - name: Login to Azure 
       uses: azure/login@v1
       with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: 'AzureCloud'
        enable-AzPSSession: false
     - name: Azure CLI -Deploy Bicep Files
       uses: Azure/CLI@v1
       with:
        inlineScript: |
          #!/bin/bash
          az deployment sub create --template-file ./infra/aks-bicep/main.bicep --parameters ./infra/aks-bicep/parameters.json --location ${{ env.LOCATION }}
          az postgres server create --resource-group ${{ env.RESOURCE_GROUP }} --name petclinicaks-db23  --location ${{ env.LOCATION }} --admin-user petclinicaksadmin --admin-password petclinicAKS123** --sku-name GP_Gen5_2

  build_Java_App: # Build the Java Application 
     runs-on: ubuntu-latest
     needs: hub_networking_AKS_Cluster
     steps:
     - name: checkout code
       uses: actions/checkout@v3
     - name: Set up JDK 11
       uses: actions/setup-java@v3
       with:
          java-version: '11'
          distribution: 'adopt'
     - name: Build with Maven, compile and build the Docker image
       run: |
        mvn spring-boot:build-image

  acr_management: # Azure Powershell Cli - ACR Login, Tag Image, Push Image 
     runs-on: ubuntu-latest
     needs: build_Java_App
     steps:
     - name: Login to Azure 
       uses: azure/login@v1
       with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: 'AzureCloud'
     - name: Azure Powershell Cli - ACR Login, Tag Image, Push Image
       uses: azure/powershell@v1
       with:
        inlineScript: |
         #!/bin/bash
         az acr login --name petclinicaksacr23
         docker tag docker.io/library/spring-petclinic:2.7.0-SNAPSHOT petclinicaksacr23.azurecr.io/petclinic
         docker push petclinicaksacr23.azurecr.io/petclinic
        azPSVersion: "latest"

  aks_cluster_management: # Azure Powershell Cli - ACR Login, Tag Image, Push Image 
     runs-on: ubuntu-latest
     needs: acr_management
     steps:
     - name: Login to Azure 
       uses: azure/login@v1
       with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: 'AzureCloud' 
     - name: Set the target AKS cluster.
       uses: Azure/aks-set-context@v1
       with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.RESOURCE_GROUP }}
     - name: Azure Powershell Cli - Update ACR, Attach ACR to Cluster, Create Service and Expose the Pod
       uses: azure/powershell@v1
       with:
        inlineScript: |
         #!/bin/bash
         az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }}
         az aks update --resource-group=${{ env.RESOURCE_GROUP }} --name=${{ env.CLUSTER_NAME }} --attach-acr ${{ env.ACR_NAME }}
         kubectl run petclinicaks --image=petclinicaksacr23.azurecr.io/petclinic
         kubectl expose pod petclinicaks --type=LoadBalancer --port=80 --target-port=8080
         kubectl get pods -A
        azPSVersion: "latest"

  get_ip: #  Get deployment IP Address 
     runs-on: ubuntu-latest
     needs: aks_cluster_management 
     steps:
     - name: Login to Azure 
       uses: azure/login@v1
       with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: 'AzureCloud'
     - name: Re-Build Java Application
       uses: actions/checkout@v3
     - name: Set up JDK 11
       uses: actions/setup-java@v3
       with:
          java-version: '11'
          distribution: 'adopt'
     - name: Build with Maven, compile and build the Docker image
       run: |
        mvn spring-boot:build-image
     - name: Azure Powershell Cli - Get deployment IP Address 
       uses: azure/powershell@v1
       with:
        inlineScript: | 
         kubectl get service petclinicaks
        azPSVersion: "latest"