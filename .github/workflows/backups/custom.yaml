# This workflow performs the following: Demo 3
# - Database configuration
# - Provisioning Azure Infra and Services (Infra Bicep: VNET, Subnets, ACR, AKS, KV, PGFS) 
# - Build the Java(springboot)App-AKS App on Docker
# - Push your app to the container registry
# - Deploy the image to your Kubernetes cluster
# - Verify your container image

# Triggers the workflow on push events on the main branch
name: Build and Deploy Application
on:
    push:
        branches:
            - main
            
        paths-ignore:
            - '*.md'
            - '*.png'
    workflow_dispatch: {}

# Secrets required to be in place:
# - AZURE_CREDENTIALS -
env:
    DEPLOYMENT_NAME: "petclinicaks"
    LOCATION: "eastus"
    RESOURCE_GROUP: "petclinicaks-rg"
    ACR_RESOURCE_GROUP: "petclinicaks-rg"
    AZURE_CONTAINER_REGISTRY: "cbsacr98"
    CLUSTER_NAME: "aks-cluster"
    CLUSTER_RESOURCE_GROUP: "petclinicaks-rg"
    CONTAINER_NAME: "cbspetclinicdemocus"
    DEPLOYMENT_MANIFEST_PATH: |
        manifests/deployment.yaml
        manifests/service.yaml

jobs:
    hub_networking_AKS_Cluster:  # deploy Hub Networking Infra
        runs-on: ubuntu-latest
        steps:
        - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
        - name: Login to Azure 
        uses: azure/login@v1
        with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        environment: 'AzureCloud'
        enable-AzPSSession: false
        - name: Azure CLI -Deploy Bicep Files
        uses: Azure/CLI@v1
        with:
        inlineScript: |
            #!/bin/bash
            az deployment sub create --template-file ./infra/aks-bicep/main.bicep --parameters ./infra/aks-bicep/parameters.json --location ${{ env.LOCATION}}
    
    buildImage:  # Build and Push the Image to ACR
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs: 
            - hub_networking_AKS_Cluster
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - name: Build and push image to ACR
              run: az acr build --image ${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f Dockerfile ./
    
    deploy: # Deploy the Image to AKS Cluster
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - uses: azure/use-kubelogin@v1
              name: Set up kubelogin for non-interactive login
              with:
                kubelogin-version: v0.0.25
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                admin: "false"
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
                use-kubelogin: "true"
            - uses: Azure/k8s-deploy@v4
              name: Deploys application
              with:
                action: deploy
                images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
                manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
                namespace: namespace-workflow-1718378497416